import React, { useEffect } from "react";
import { FlatList, View, Text } from "react-native";
import { SafeAreaView } from "react-native-safe-area-context";

import { useInstructorsStore } from "@/store/freeInstructorsStore";

const Test = () => {
  // –∑–∞—Ä–∞–∑ –≤ –±–∞–∑—ñ —î —ñ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏ –∑ 8041 —Ç–∞ 4641
  const selectedCenterId = "8041"; // Example selected center 8041 4641
  const { instructors, fetchFreeInstructors, clearSubscription } =
    useInstructorsStore();
  //console.log("err in Test", error);
  useEffect(() => {
    if (selectedCenterId) {
      fetchFreeInstructors(selectedCenterId);
    }

    return () => {
      clearSubscription();
    };
  }, [selectedCenterId, fetchFreeInstructors, clearSubscription]);
  console.log("instructors", instructors);
  return (
    <SafeAreaView className="flex-1  container">
      <View className="py-8 ">
        <Text className="text-white text-lg font-bold">
          –°–ø–∏—Å–æ–∫ –í—ñ–ª—å–Ω–∏—Ö –Ü–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ñ–≤
        </Text>
        {/* {error && (
          <Text className="text-red-500 text-center mt-4">
            –ü–æ–º–∏–ª–∫–∞ –∑‚Äô—î–¥–Ω–∞–Ω–Ω—è. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç.
          </Text>
        )} */}
        {instructors.length > 0 ? (
          <FlatList
            data={instructors}
            renderItem={({ item }) => (
              <View className="p-4 border-b border-gray-200">
                <Text className="text-lg text-white font-bold">
                  {item.name}
                </Text>
                <Text className="text-sm text-white">{item.phone}</Text>
              </View>
            )}
            keyExtractor={(item) => item.uidInstructor}
          />
        ) : (
          <Text className="text-sm text-white">
            –ù–∞–∂–∞–ª—å –∑–∞—Ä–∞–∑ –Ω–µ–º–∞—î –≤—ñ–ª—å–Ω–∏—Ö —ñ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ñ–≤
          </Text>
        )}
      </View>
    </SafeAreaView>
  );
};

export default Test;
// –Ω–µ –∑–∞–±—É—Ç–∏ –æ–±—Ä–æ–±–∏—Ç–∏ –æ—Ñ—Ñ–ª–∞–π–Ω
// npx expo install @react-native-community/netinfo
// import NetInfo from "@react-native-community/netinfo";
// import { useEffect, useState } from "react";
// import { Text, View } from "react-native";

// const Test = () => {
//   const [isConnected, setIsConnected] = useState<boolean | null>(null);

//   useEffect(() => {
//     const unsubscribe = NetInfo.addEventListener((state) => {
//       setIsConnected(state.isConnected);
//     });

//     // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
//     NetInfo.fetch().then((state) => {
//       setIsConnected(state.isConnected);
//     });

//     return () => {
//       unsubscribe();
//     };
//   }, []);

//   return (
//     <View style={{ padding: 20 }}>
//       {isConnected === false && (
//         <Text style={{ color: "red", textAlign: "center", marginBottom: 10 }}>
//           üö´ –í–∏ –æ—Ñ–ª–∞–π–Ω. –î–∞–Ω—ñ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω–∏–º–∏.
//         </Text>
//       )}

//       {/* –æ—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞: instructors, FlatList –∏ —Ç.–¥. */}
//     </View>
//   );
// };

// in state
// fetchFreeInstructors: async (serviceCenterId: string) => {
//   const netState = await NetInfo.fetch();
//   if (!netState.isConnected) {
//     set({
//       error: "–í–∏ –æ—Ñ–ª–∞–π–Ω. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–∑'—î–¥–Ω–∞–Ω–Ω—è.",
//       instructors: [],
//     });
//     return;
//   }
